name: cargo test and check

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}-${{ github.event_name }}
    cancel-in-progress: true

env:
    RUST_BACKTRACE: 1

jobs:
    test:
        runs-on: ${{ matrix.setup.os }}
        strategy:
            matrix:
                toolchain: ["nightly", "beta", "stable"]
                setup:
                    - os: "ubuntu-latest"
                      target: "x86_64-unknown-linux-gnu"
                    - os: "ubuntu-latest"
                      target: "i686-unknown-linux-gnu"
                    - os: "ubuntu-latest"
                      target: "aarch64-unknown-linux-gnu"
                    - os: "ubuntu-latest"
                      target: "armv7-unknown-linux-gnueabihf"
                    - os: "ubuntu-latest"
                      target: "x86_64-unknown-linux-musl"

                    - os: "windows-latest"
                      target: "x86_64-pc-windows-msvc"
                    - os: "windows-latest"
                      target: "i686-pc-windows-msvc"
                    - os: "windows-latest"
                      target: "x86_64-pc-windows-gnu"
                    - os: "windows-latest"
                      target: "i686-pc-windows-gnu"

                    - os: "macos-latest"
                      target: "x86_64-apple-darwin"
                    - os: "macos-latest"
                      target: "aarch64-apple-darwin"
        steps:
            - uses: actions/checkout@v4
            - name: Setup Rust Toolchain
              run: rustup toolchain install ${{ matrix.toolchain }}
            - name: Setup target
              if: ${{ matrix.setup.target }}
              run: rustup +${{ matrix.toolchain }} target install ${{ matrix.setup.target }}
            - name: Test on ${{ matrix.setup.os }} ${{ matrix.toolchain }} ${{ matrix.setup.target }}
              shell: bash
              run: |
                  set -ex
                  cargo +${{ matrix.toolchain }} test

    check:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]
        steps:
            - uses: actions/checkout@v4
            - name: Setup Rust Toolchain
              run: |
                  rustup default nightly
                  rustup component add clippy
            - name: Check clippy
              run: |
                  cargo clippy --all-features --all-targets -- -Dwarnings
            - name: Check Docs
              run: |
                  cargo doc --workspace --all-features --no-deps
